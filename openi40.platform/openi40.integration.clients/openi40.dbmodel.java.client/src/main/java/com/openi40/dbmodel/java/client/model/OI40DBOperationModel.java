/*
 * Openi40
 * The open source industy 4.0 production scheduler & MES platform
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.openi40.dbmodel.java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;

/**
 * OI40DBOperationModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-29T17:41:29.716+01:00")
public class OI40DBOperationModel {
  @JsonProperty("attributesMap")
  private Object attributesMap = null;

  @JsonProperty("code")
  private String code = null;

  @JsonProperty("consumingBatchQty")
  private Double consumingBatchQty = null;

  @JsonProperty("consumingBatchTransferType")
  private String consumingBatchTransferType = null;

  @JsonProperty("cycleCode")
  private String cycleCode = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("integrationTs")
  private Date integrationTs = null;

  @JsonProperty("modifiedTimestamp")
  private Date modifiedTimestamp = null;

  @JsonProperty("plantCode")
  private String plantCode = null;

  @JsonProperty("producingBatchQty")
  private Double producingBatchQty = null;

  @JsonProperty("producingBatchTransferType")
  private String producingBatchTransferType = null;

  @JsonProperty("removed")
  private Boolean removed = null;

  @JsonProperty("sequenceCode")
  private String sequenceCode = null;

  public OI40DBOperationModel attributesMap(Object attributesMap) {
    this.attributesMap = attributesMap;
    return this;
  }

   /**
   * Get attributesMap
   * @return attributesMap
  **/
  @ApiModelProperty(value = "")
  public Object getAttributesMap() {
    return attributesMap;
  }

  public void setAttributesMap(Object attributesMap) {
    this.attributesMap = attributesMap;
  }

  public OI40DBOperationModel code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public OI40DBOperationModel consumingBatchQty(Double consumingBatchQty) {
    this.consumingBatchQty = consumingBatchQty;
    return this;
  }

   /**
   * Get consumingBatchQty
   * @return consumingBatchQty
  **/
  @ApiModelProperty(value = "")
  public Double getConsumingBatchQty() {
    return consumingBatchQty;
  }

  public void setConsumingBatchQty(Double consumingBatchQty) {
    this.consumingBatchQty = consumingBatchQty;
  }

  public OI40DBOperationModel consumingBatchTransferType(String consumingBatchTransferType) {
    this.consumingBatchTransferType = consumingBatchTransferType;
    return this;
  }

   /**
   * Get consumingBatchTransferType
   * @return consumingBatchTransferType
  **/
  @ApiModelProperty(value = "")
  public String getConsumingBatchTransferType() {
    return consumingBatchTransferType;
  }

  public void setConsumingBatchTransferType(String consumingBatchTransferType) {
    this.consumingBatchTransferType = consumingBatchTransferType;
  }

  public OI40DBOperationModel cycleCode(String cycleCode) {
    this.cycleCode = cycleCode;
    return this;
  }

   /**
   * Get cycleCode
   * @return cycleCode
  **/
  @ApiModelProperty(value = "")
  public String getCycleCode() {
    return cycleCode;
  }

  public void setCycleCode(String cycleCode) {
    this.cycleCode = cycleCode;
  }

  public OI40DBOperationModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OI40DBOperationModel integrationTs(Date integrationTs) {
    this.integrationTs = integrationTs;
    return this;
  }

   /**
   * Get integrationTs
   * @return integrationTs
  **/
  @ApiModelProperty(value = "")
  public Date getIntegrationTs() {
    return integrationTs;
  }

  public void setIntegrationTs(Date integrationTs) {
    this.integrationTs = integrationTs;
  }

  public OI40DBOperationModel modifiedTimestamp(Date modifiedTimestamp) {
    this.modifiedTimestamp = modifiedTimestamp;
    return this;
  }

   /**
   * Get modifiedTimestamp
   * @return modifiedTimestamp
  **/
  @ApiModelProperty(value = "")
  public Date getModifiedTimestamp() {
    return modifiedTimestamp;
  }

  public void setModifiedTimestamp(Date modifiedTimestamp) {
    this.modifiedTimestamp = modifiedTimestamp;
  }

  public OI40DBOperationModel plantCode(String plantCode) {
    this.plantCode = plantCode;
    return this;
  }

   /**
   * Get plantCode
   * @return plantCode
  **/
  @ApiModelProperty(value = "")
  public String getPlantCode() {
    return plantCode;
  }

  public void setPlantCode(String plantCode) {
    this.plantCode = plantCode;
  }

  public OI40DBOperationModel producingBatchQty(Double producingBatchQty) {
    this.producingBatchQty = producingBatchQty;
    return this;
  }

   /**
   * Get producingBatchQty
   * @return producingBatchQty
  **/
  @ApiModelProperty(value = "")
  public Double getProducingBatchQty() {
    return producingBatchQty;
  }

  public void setProducingBatchQty(Double producingBatchQty) {
    this.producingBatchQty = producingBatchQty;
  }

  public OI40DBOperationModel producingBatchTransferType(String producingBatchTransferType) {
    this.producingBatchTransferType = producingBatchTransferType;
    return this;
  }

   /**
   * Get producingBatchTransferType
   * @return producingBatchTransferType
  **/
  @ApiModelProperty(value = "")
  public String getProducingBatchTransferType() {
    return producingBatchTransferType;
  }

  public void setProducingBatchTransferType(String producingBatchTransferType) {
    this.producingBatchTransferType = producingBatchTransferType;
  }

  public OI40DBOperationModel removed(Boolean removed) {
    this.removed = removed;
    return this;
  }

   /**
   * Get removed
   * @return removed
  **/
  @ApiModelProperty(value = "")
  public Boolean isRemoved() {
    return removed;
  }

  public void setRemoved(Boolean removed) {
    this.removed = removed;
  }

  public OI40DBOperationModel sequenceCode(String sequenceCode) {
    this.sequenceCode = sequenceCode;
    return this;
  }

   /**
   * Get sequenceCode
   * @return sequenceCode
  **/
  @ApiModelProperty(value = "")
  public String getSequenceCode() {
    return sequenceCode;
  }

  public void setSequenceCode(String sequenceCode) {
    this.sequenceCode = sequenceCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OI40DBOperationModel oi40DBOperationModel = (OI40DBOperationModel) o;
    return Objects.equals(this.attributesMap, oi40DBOperationModel.attributesMap) &&
        Objects.equals(this.code, oi40DBOperationModel.code) &&
        Objects.equals(this.consumingBatchQty, oi40DBOperationModel.consumingBatchQty) &&
        Objects.equals(this.consumingBatchTransferType, oi40DBOperationModel.consumingBatchTransferType) &&
        Objects.equals(this.cycleCode, oi40DBOperationModel.cycleCode) &&
        Objects.equals(this.description, oi40DBOperationModel.description) &&
        Objects.equals(this.integrationTs, oi40DBOperationModel.integrationTs) &&
        Objects.equals(this.modifiedTimestamp, oi40DBOperationModel.modifiedTimestamp) &&
        Objects.equals(this.plantCode, oi40DBOperationModel.plantCode) &&
        Objects.equals(this.producingBatchQty, oi40DBOperationModel.producingBatchQty) &&
        Objects.equals(this.producingBatchTransferType, oi40DBOperationModel.producingBatchTransferType) &&
        Objects.equals(this.removed, oi40DBOperationModel.removed) &&
        Objects.equals(this.sequenceCode, oi40DBOperationModel.sequenceCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributesMap, code, consumingBatchQty, consumingBatchTransferType, cycleCode, description, integrationTs, modifiedTimestamp, plantCode, producingBatchQty, producingBatchTransferType, removed, sequenceCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OI40DBOperationModel {\n");
    
    sb.append("    attributesMap: ").append(toIndentedString(attributesMap)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    consumingBatchQty: ").append(toIndentedString(consumingBatchQty)).append("\n");
    sb.append("    consumingBatchTransferType: ").append(toIndentedString(consumingBatchTransferType)).append("\n");
    sb.append("    cycleCode: ").append(toIndentedString(cycleCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    integrationTs: ").append(toIndentedString(integrationTs)).append("\n");
    sb.append("    modifiedTimestamp: ").append(toIndentedString(modifiedTimestamp)).append("\n");
    sb.append("    plantCode: ").append(toIndentedString(plantCode)).append("\n");
    sb.append("    producingBatchQty: ").append(toIndentedString(producingBatchQty)).append("\n");
    sb.append("    producingBatchTransferType: ").append(toIndentedString(producingBatchTransferType)).append("\n");
    sb.append("    removed: ").append(toIndentedString(removed)).append("\n");
    sb.append("    sequenceCode: ").append(toIndentedString(sequenceCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

